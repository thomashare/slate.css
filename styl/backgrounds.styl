@import 'config'
@import 'devices'
@import 'colors'

color-combine(val1, val2, val3)
  return unquote('#'+val1+val2+val3)

[class*=bg]
  transition: background-color 0.3s ease, color 0.3s ease

if backgrounds in overscope

  // for each screen size in the screen-sizes array
  for screen-size in screen-sizes
    
    // media query settings
    min-width-size = screen-size+'-min-width'
    min-width = 'min-width: '+min-width-size

    // setup mobile first screen sizes for each column size
    @media screen and ({min-width})

      // generate by color value bg-RGB
      for color1 in color-values
        for color2 in color-values
          for color3 in color-values

            .{screen-size}-bg-{color1}{color2}{color3}
              bg-color = color-combine(color1, color2, color3)
              background-color: bg-color
              if dark(darken(convert('#'+color1+color2+color3), 15%))
                color: rgba(255,255,255,0.85)
              else
                color: rgba(0,0,0,0.85)
                
else 

  // generate by color name
  for color in colors
    .bg-{color}
      background-color: color+'-color'
      if dark(darken(color+'-color', 15%))
        color: rgba(255,255,255,0.85)
      else
        color: rgba(0,0,0,0.85)

  // generate by color value bg-RGB
  for color1 in color-values
    for color2 in color-values
      for color3 in color-values

        .bg-{color1}{color2}{color3}
          bg-color = color-combine(color1, color2, color3)
          background-color: bg-color
          if dark(darken(convert('#'+color1+color2+color3), 15%))
            color: rgba(255,255,255,0.85)
          else
            color: rgba(0,0,0,0.85)
